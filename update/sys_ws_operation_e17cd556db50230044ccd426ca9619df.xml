<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri>/api/x_261673_resilient/api/create</default_operation_uri>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>create</name>
        <operation_script><![CDATA[// (c) Copyright IBM Corp. 2019. All Rights Reserved.

(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	//Declare global variables
	var record, response_body = null;
	var req = request.body.data;
	
	//Function that converts miliseconds to a GlideDateTime Object
	function ms_to_glideDateTime(ms){
		var gdt = new GlideDateTime();
		gdt.subtract(gdt.getNumericValue()); // sets the date to 0 
		gdt.add(ms); //Set to ms you want
		return gdt;
	}
	
	//Function that creates and initializes a new GlideRecord
	function new_record(table_name){
		var rec = new GlideRecord(table_name);
		rec.initialize();
		return rec;
	}

	//Function that generates the response body
	function generate_response_body(record){
		return {
			"res_id": req.id,
			"sn_sys_id": record.getValue('sys_id'),
			"sn_ref_id": record.getValue('number'),
			"sn_state": record.state.getChoiceValue()
		};
	}
	
	//Function to set all common table column fields
	function set_record_required_fields(record, request, type, short_description, description){
		//Set custom table column fields
		record.setValue("x_261673_resilient_reference_id", request.id);
		record.setValue("x_261673_resilient_type", type);
		record.setValue("x_261673_resilient_reference_link", request.link);
		
		//Set system table column fields
		record.short_description = short_description;
		record.description = description;
		
		//If an initial work note is defined, add it
		if(request.sn_init_work_note != null){
			record.work_notes = request.sn_init_work_note;
		}
		
		return record;
	}

	//Function that sets the optional_fields of the record
	function set_record_optional_fields(record, fields, sn_table_name){
		for (var i=0; i<fields.length; i++){
			var field = fields[i];
			if(record.isValidField(field.name)){
				record[field.name] = field.value;
				record.setValue(field.name, field.value);
			}
			else{
				gs.warning(field.name + " is not a valid field in the " + sn_table_name + " table!");
			}
		}
	}
	
	//Initialize a new record
	record = new_record(req.sn_table_name);
	
	//Create a ServiceNow record in if it is a Resilient Task
	if(req.type == 'res_task'){	
		//Set the required fields of the record
		record = set_record_required_fields(record, req, 'Task', req.task_name, req.task_instructions);
	}
	else if (req.type == 'res_incident'){
		//Set the required fields of the record
		record = set_record_required_fields(record, req, 'Incident', req.incident_name, req.incident_description);
	}
	else {
		response.setError(new sn_ws_err.BadRequestError('The Resilient Type must be defined and valid. Either "res_task" or "res_incident". Current value: ' + req.type));
		return response;
	}
	
	//Set the optional_fields that the user defines in the Resilient pre-process script
	if(req.sn_optional_fields){
		set_record_optional_fields(record, req.sn_optional_fields, req.sn_table_name);
	}

	//Insert the record
	record.insert();

	//Create the response body
	response_body = generate_response_body(record);
	response.setBody(response_body);
	
	return response;

})(request, response);
]]></operation_script>
        <operation_uri>/api/x_261673_resilient/v1/api/create</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/create</relative_path>
        <request_example>"type": "res_task",&#13;
"id": "RES-1001-2002",&#13;
"link": "https://192.168.0.2/#incidents/1001?task_id=2002",&#13;
"incident_id": 1001,&#13;
"task_id": 2002,&#13;
"task_name": "Change device/application passwords",&#13;
"task_creator": {"name": "John Smith", "email": "johnsmith@example.com"},&#13;
"task_owner": {"name": "Jane Smith", "email": "jamesmith@example.com"},&#13;
"task_date_initiated": 1534932076553,&#13;
"task_instructions": "Immediately change any associated app or device passwords to company directory services.",&#13;
"sn_init_work_note": "This Incident has been created by Resilient Systems user seanmurphy@example.com",&#13;
"optional_fields": {"task_due_date": null}}</request_example>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>false</requires_snc_internal_role>
        <short_description>Create a ServiceNow record from an IBM Resilient Incident or Task</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-09-04 11:26:21</sys_created_on>
        <sys_id>e17cd556db50230044ccd426ca9619df</sys_id>
        <sys_mod_count>74</sys_mod_count>
        <sys_name>create</sys_name>
        <sys_package display_value="IBM Resilient" source="x_261673_resilient">d321599edb10230044ccd426ca9619e3</sys_package>
        <sys_policy/>
        <sys_scope display_value="IBM Resilient">d321599edb10230044ccd426ca9619e3</sys_scope>
        <sys_update_name>sys_ws_operation_e17cd556db50230044ccd426ca9619df</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-02-13 11:05:01</sys_updated_on>
        <web_service_definition display_value="api">83eb9156db50230044ccd426ca961989</web_service_definition>
        <web_service_version display_value="v1">047c5192db50230044ccd426ca9619bf</web_service_version>
    </sys_ws_operation>
</record_update>
